// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: identify.proto

package identify_pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Identify struct {
	// protocolVersion determines compatibility between peers
	ProtocolVersion *string `protobuf:"bytes,5,opt,name=protocolVersion" json:"protocolVersion,omitempty"`
	// agentVersion is like a UserAgent string in browsers, or client version in bittorrent
	// includes the client name and client.
	AgentVersion *string `protobuf:"bytes,6,opt,name=agentVersion" json:"agentVersion,omitempty"`
	// publicKey is this node's public key (which also gives its node.ID)
	// - may not need to be sent, as secure channel implies it has been sent.
	// - then again, if we change / disable secure channel, may still want it.
	PublicKey []byte `protobuf:"bytes,1,opt,name=publicKey" json:"publicKey,omitempty"`
	// listenAddrs are the multiaddrs the sender node listens for open connections on
	ListenAddrs [][]byte `protobuf:"bytes,2,rep,name=listenAddrs" json:"listenAddrs,omitempty"`
	// oservedAddr is the multiaddr of the remote endpoint that the sender node perceives
	// this is useful information to convey to the other side, as it helps the remote endpoint
	// determine whether its connection to the local peer goes through NAT.
	ObservedAddr []byte `protobuf:"bytes,4,opt,name=observedAddr" json:"observedAddr,omitempty"`
	// protocols are the services this node is running
	Protocols []string `protobuf:"bytes,3,rep,name=protocols" json:"protocols,omitempty"`
	// master marked if the node is a master node
	Master               *bool    `protobuf:"varint,15,opt,name=master" json:"master,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Identify) Reset()         { *m = Identify{} }
func (m *Identify) String() string { return proto.CompactTextString(m) }
func (*Identify) ProtoMessage()    {}
func (*Identify) Descriptor() ([]byte, []int) {
	return fileDescriptor_83f1e7e6b485409f, []int{0}
}
func (m *Identify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identify.Unmarshal(m, b)
}
func (m *Identify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identify.Marshal(b, m, deterministic)
}
func (m *Identify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identify.Merge(m, src)
}
func (m *Identify) XXX_Size() int {
	return xxx_messageInfo_Identify.Size(m)
}
func (m *Identify) XXX_DiscardUnknown() {
	xxx_messageInfo_Identify.DiscardUnknown(m)
}

var xxx_messageInfo_Identify proto.InternalMessageInfo

func (m *Identify) GetProtocolVersion() string {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return ""
}

func (m *Identify) GetAgentVersion() string {
	if m != nil && m.AgentVersion != nil {
		return *m.AgentVersion
	}
	return ""
}

func (m *Identify) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *Identify) GetListenAddrs() [][]byte {
	if m != nil {
		return m.ListenAddrs
	}
	return nil
}

func (m *Identify) GetObservedAddr() []byte {
	if m != nil {
		return m.ObservedAddr
	}
	return nil
}

func (m *Identify) GetProtocols() []string {
	if m != nil {
		return m.Protocols
	}
	return nil
}

func (m *Identify) GetMaster() bool {
	if m != nil && m.Master != nil {
		return *m.Master
	}
	return false
}

func init() {
	proto.RegisterType((*Identify)(nil), "identify.pb.Identify")
}

func init() { proto.RegisterFile("identify.proto", fileDescriptor_83f1e7e6b485409f) }

var fileDescriptor_83f1e7e6b485409f = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xce, 0xb1, 0xca, 0xc2, 0x30,
	0x14, 0x05, 0x60, 0xf2, 0xf7, 0xb7, 0xb4, 0xb7, 0xc5, 0x42, 0x06, 0xc9, 0xe0, 0x10, 0x3a, 0x65,
	0xf2, 0x1d, 0x1c, 0xc5, 0x2d, 0x83, 0x7b, 0xdb, 0x5c, 0x25, 0x50, 0x93, 0x92, 0x44, 0xa1, 0xaf,
	0xed, 0x13, 0x48, 0x43, 0xa5, 0xd6, 0xf1, 0x7c, 0x1c, 0xee, 0xb9, 0xb0, 0xd5, 0x0a, 0x4d, 0xd0,
	0xd7, 0xf1, 0x30, 0x38, 0x1b, 0x2c, 0x2d, 0x96, 0xdc, 0xd6, 0x2f, 0x02, 0xd9, 0x69, 0xce, 0x54,
	0x40, 0x15, 0x2b, 0x9d, 0xed, 0x2f, 0xe8, 0xbc, 0xb6, 0x86, 0x6d, 0x38, 0x11, 0xb9, 0xfc, 0x65,
	0x5a, 0x43, 0xd9, 0xdc, 0xd0, 0x84, 0x4f, 0x2d, 0x8d, 0xb5, 0x95, 0xd1, 0x3d, 0xe4, 0xc3, 0xa3,
	0xed, 0x75, 0x77, 0xc6, 0x91, 0x11, 0x4e, 0x44, 0x29, 0x17, 0xa0, 0x1c, 0x8a, 0x5e, 0xfb, 0x80,
	0xe6, 0xa8, 0x94, 0xf3, 0xec, 0x8f, 0x27, 0xa2, 0x94, 0xdf, 0x34, 0x6d, 0xd8, 0xd6, 0xa3, 0x7b,
	0xa2, 0x9a, 0x80, 0xfd, 0xc7, 0x13, 0x2b, 0x8b, 0x1b, 0xf3, 0x6b, 0x9e, 0x25, 0x3c, 0x11, 0xb9,
	0x5c, 0x80, 0xee, 0x20, 0xbd, 0x37, 0x3e, 0xa0, 0x63, 0x15, 0x27, 0x22, 0x93, 0x73, 0x7a, 0x07,
	0x00, 0x00, 0xff, 0xff, 0x8e, 0x09, 0x16, 0xed, 0x12, 0x01, 0x00, 0x00,
}
